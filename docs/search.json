[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kinnary H. Shah",
    "section": "",
    "text": "Thanks for taking a look at my website!\nMy name is Kinnary (kin-uh-ree) Shah and I am working on my PhD at Johns Hopkins Bloomberg School of Public Health in the Department of Biostatistics. I received my Bachelor’s degree in Biomathematics & Public Health from Rutgers University - New Brunswick, where I completed research projects in computational genetics and public policy. Outside of academics, I enjoy experimenting in the kitchen and hand building slab pottery."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Research",
    "section": "",
    "text": "In collaboration with Dr. Stephanie Hicks and researchers at the Lieber Institute for Brain Development, I am currently working on spatial transcriptomics methods development and data analysis projects.\nI presented one of my projects at the BioConductor conference in August 2023. Feel free to watch it here (0:40-10:22)! If the embedded video isn’t working, you can use this link."
  },
  {
    "objectID": "teaching.html",
    "href": "teaching.html",
    "title": "Teaching",
    "section": "",
    "text": "I have served as a teaching assistant for the following courses:\n\nLead TA Statistical Methods in Public Health I, III (2023-2024 school year)\nMultilevel Models (June 2023)\nStatistical Methods in Public Health I-IV (2022-2023 school year)"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Blog",
    "section": "",
    "text": "random seeds\n\n\n\nR\n\n\nrandom seed\n\n\n\nwhat I learned about random seeds while setting up a simulation\n\n\n\nKinnary H. Shah\n\n\nAug 9, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-08-09-random-seeds/index.html",
    "href": "posts/2023-08-09-random-seeds/index.html",
    "title": "random seeds",
    "section": "",
    "text": "TLDR: I explain why researchers should not use the same random seed to generate variables that should not be correlated.\nI have been working on a simulation for a spatial transcriptomics project. During the process of debugging the simulation, I came across an issue with setting seeds that I wanted to explore further. Setting a seed initializes a value that is used by a pseudorandom number generator.\nComparing these two lines of code shows us how a seed functions:\n\nset.seed(10); runif(2); runif(2)\n\n[1] 0.5074782 0.3067685\n\n\n[1] 0.4269077 0.6931021\n\nset.seed(10); runif(4)\n\n[1] 0.5074782 0.3067685 0.4269077 0.6931021\n\n\nFor this reason, we want to refrain from using the same random seed to generate variables that should not be correlated. For example,\n\nset.seed(1)\nalpha &lt;- runif(50, 1, 2)\n\nset.seed(1)\nbeta &lt;- runif(25, 0.5, 4)\nbeta &lt;- append(beta, runif(25, 4, 8))\n\nplot(alpha, beta)\n\n\n\ncor(alpha[1:25], beta[1:25])\n\n[1] 1\n\ncor(alpha[26:50], beta[26:50])\n\n[1] 1\n\n\nIt is very clear when I write it in simple code like this, but I was not aware of this concern before. The same issue occurs when selecting values from any distribution.\n\nset.seed(100)\nvals1 &lt;- rnorm(100, mean = 3, sd = 1)\n\nset.seed(100)\nvals2 &lt;- rnorm(100, mean = 0.5, sd = 10)\n\nplot(vals1, vals2)\n\n\n\ncor(vals1, vals2)\n\n[1] 1\n\n\nTo make sure this result is not by chance, I replicated it with 50 different seeds and summarized the correlation.\n\ncorrelation_list &lt;- c()\n\nfor(i in c(1:50)){\n  set.seed(i)\n  vals1 &lt;- rnorm(100, mean = i, sd = 1)\n\n  set.seed(i)\n  vals2 &lt;- rnorm(100, mean = 0.5, sd = i)\n\n  correlation_list &lt;- append(correlation_list, cor(vals1, vals2))\n}\n\ncorrelation_list\n\n [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[39] 1 1 1 1 1 1 1 1 1 1 1 1\n\n\n\n\n\n\n\n\nBest Practices\n\n\n\nFrom now on, I will be implementing a better practice of setting the seed just once at the beginning (Morris and Crowther 2019).\n\n\nI was under the assumption that using the same seed to simulate, say, normal and uniform data would produce correlated data as well. I found that this is actually not the case and that this correlation does not occur when selecting values from different distributions.\n\nset.seed(9)\nnormal &lt;- rnorm(100)\n\nset.seed(9)\nuniform &lt;- runif(100)\n\nplot(normal, uniform)\n\n\n\ncor(normal, uniform)\n\n[1] 0.06719044\n\n\nThis finding is counterintuitive to me as I thought that generating values from the normal distribution was just transformation of randomly generated uniform values to the normal distribution. I’m reading about the Mersenne Twister, a modern random number generator that is used in R and other languages (“Mersenne Twister” 2023), in hopes of understanding this. I would love to hear if anyone knows of an explanation for this.\nBig thanks to Boyi Guo for his insights on this post!\n\n\n\n\nReferences\n\n“Mersenne Twister.” 2023. https://en.m.wikipedia.org/wiki/Mersenne_Twister.\n\n\nMorris, White, T., and M. Crowther. 2019. “Using Simulation Studies to Evaluate Statistical Methods.” https://onlinelibrary.wiley.com/doi/10.1002/sim.8086."
  }
]